name: Terraform apply
on:
  push:
    branches:
      - main
  workflow_dispatch:
    
jobs: 
  Build_image:
    runs-on: ubuntu-latest
    steps:
      - name: checkout code
        uses: actions/checkout@v3

      - name: install docker
        run: |
          chmod +x db/docker.sh
          ./db/docker.sh

      - name: Log in to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}    

      # - name: Login to DockerHub
      #   run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin

      - name: Build Docker Image
        run: docker build -t k8s-prom-grafana .

      - name: Push Image to DockerHub
        run: docker tag k8s-prom-grafana mahadikbs/k8s-prom-grafana:latest
      - run: docker push mahadikbs/k8s-prom-grafana:latest

  terraform_plan:
    needs: Build_image
    runs-on: ubuntu-latest
    env:
     TF_VAR_DOCKER_USERNAME: ${{secrets.DOCKER_USERNAME}}
     TF_VAR_DOCKER_PASSWORD: ${{secrets.DOCKER_PASSWORD}}
     aws-access-key-id: ${{secrets.AWS_ACCESS_KEY_ID}}      
     aws-secret-access-key: ${{secrets.AWS_SECRET_ACCESS_KEY}}       
    steps:
      - name: checkout repo
        uses: actions/checkout@v3

      - name: setup ssh keys
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          echo "${{ secrets.SSH_PUBLIC_KEY }}" > ~/.ssh/id_rsa.pub
          ssh-keyscan github.com >> ~/.ssh/known_hosts         

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{secrets.AWS_ACCESS_KEY_ID}}      
          aws-secret-access-key: ${{secrets.AWS_SECRET_ACCESS_KEY}}
          aws-region: us-east-1        

      - name: setup Terraform
        uses: hashicorp/setup-terraform@v2
        with: 
          terraform_version: 1.5.0

      - name: Initialize Terraform
        run: terraform init  -reconfigure

      # - name: Select Terraform Workspace
      #   run: terraform workspace select ${{ inputs.environment }} || terraform workspace new ${{ inputs.environment }}

      - name: Planned terraform changes
        run:  terraform plan      

      # - name: Apply changes to production
      #   run:  terraform apply -auto-approve  
      #   with:
      #     aws-access-key-id: ${{secrets.AWS_ACCESS_KEY_ID}}      
      #     aws-secret-access-key: ${{secrets.AWS_SECRET_ACCESS_KEY}}          